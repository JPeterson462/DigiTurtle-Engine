5/12/17:
	- OpenGL API
	- OpenAL API
	- GLFW API
	- Started rendering API
5/13/17:
	- Unit testing of base API
	- Basic rendering working
	- Framebuffers working (although it only renders as a fullscreen quad)
	- Scene API
	- FPS
	- Geometry pass of Deferred Rendering
5/14/17:
	- Started lighting
	- Point lights
	- Ambient lights
5/15/17:
	- Component based entities
	- Model importing
	- Skeleton animation
5/16/17:
	- More organized scenegraph
	- Fixed point lights
	- Directional lights
	- Normal mapped skeletal animation
	- Spot Lights
	- Audio system
5/18/17:
	- Implemented distance field text rendering
	- Outline effect
	- Unified codec register method
	- Started microphone recording
5/19/17:
	- Common asset stream interface (needs to be updated when the destination for assets changes)
	- FXAA (antialiasing) (still somewhat slow and looks bad)
	- Anisotropic filtering
5/20/17:
	- Started MD5 Animation Importer
	- Reorganized Model class
5/23/17:
	- Started Assimp importer
5/24/17:
	- Added window icons
	- Started input processing
	- Started terrain rendering (doesn't work yet)
5/25/17:
	- Finished keyboard and mouse input processing
	- Got terrain rendering
5/26/17:
	- Fixed terrain mesh
	- Terrain multitexturing
5/27/17:
	- Started instanced rendering
5/28/17:
	- NIO TCP Networking
5/29/17:
	- NIO UDP Networking
	- Get/Post REST Interface
	- JSON Parser
5/30/17:
	- Fixed instance rendering
	- Need to fix FirstPersonCamera

https://mtnphil.wordpress.com/2014/05/24/decals-deferred-rendering/

TIMELINE
	1. Terrain
*		- Rendering
		- Optimization
*		- Multitexturing [TerrainTexturePack]
		- Normal Mapping
	2. Post Processing
		- Depth of Field
		- Fix FXAA (Faster and better)
	3. Shadows
		- Percentage Closer Filtering
*	4. Instanced Geometry
		- Particle Effects
*	5. Window Icons
	6. Lighting
		- Fix lighting calculations
		- Materials
		- Fix Cone Light Range
		- Project Lighting (i.e. Position) with View Matrix
	7. Decal and Transparency Passes
	8. Controller Input
		- First Person Movement
	9. Skybox
	10. God Rays
	11. Order Independent Transparency
	12. Mouse Picking
	13. Water Rendering
	14. Post Processing Effects
	15. Fix Assimp Importer
	16. Fix MD5 Importer
	17. Physics Engine
		- Terrain, Navigation Mesh
		- Collision
		- Optimization
*	18. Networking
*		- NIO
*			- TCP
*			- UDP
*		- REST
*		- Encoding/Decoding Traffic
	19. User Interface
*	20. Input Processing
	21. Photo-realistic Rendering

TODO
	- Shadows
	- OBJ Material Loading?
	- Music instance that waits for audio rather than ending
	
	- Distance field font rendering: Small fonts
	- Percentage closer filtering
	
	- Instanced Geometry
	- Shaders
		Lighting
		- Fix cone light falloff
		- Project vectors with view matrix (v' = view * v)
		Materials
	- Decal and transparency passes (others?)
	- "God rays"
	- Watch for z-fighting
	
	- What else needs Components?
	- Order independent transparency
	- Input processing
	
	- Skybox
	- Mouse Picking
	- Physics engine
	- Particle system
	- Water rendering